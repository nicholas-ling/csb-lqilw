{"version":3,"sources":["makeData.js","App.js","index.js"],"names":["range","len","arr","i","push","formatter","Intl","NumberFormat","style","currency","newPerson","step","m","t","r","total","mortgageCalculator","mortgageJs","createMortgageCalculator","totalPrice","downPayment","interestRate","months","taxRate","insuranceRate","mortgageInsuranceRate","mortgageInsuranceEnabled","mortgageInsuranceThreshold","additionalPrincipalPayment","payment","calculatePayment","mortgage","paymentSchedule","totalPayment","tax","parseFloat","rental","management","cost","cost_interest","interestPayment","roi","cagr","numeral","Math","pow","format","console","log","price","down","insurance","cash","profit","makeData","_len","arguments","length","lens","Array","_key","depth","undefined","map","d","Object","objectSpread","makeDataLevel","Styles","styled","div","withConfig","displayName","componentId","Table","_ref","columns","data","_useTable","useTable","useRowSelect","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","react_default","a","createElement","Fragment","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","slice","row","getRowProps","cells","cell","getCellProps","App","_useState","useState","_useState2","slicedToArray","setData","React","useMemo","Header","accessor","_useState3","_useState4","setManagement","_useState5","_useState6","setTax","_useState7","_useState8","setRental","type","name","onChange","e","target","value","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e6f1585f.chunk.js","sourcesContent":["import mortgageJs from \"mortgage-js\";\nimport numeral from \"numeral\";\n\nconst range = (len) => {\n  const arr = [];\n  for (let i = 0; i < len; i++) {\n    arr.push(i);\n  }\n  return arr;\n};\n\nconst formatter = new Intl.NumberFormat(\"en-US\", {\n  style: \"currency\",\n  currency: \"USD\"\n\n  // These options are needed to round to whole numbers if that's what you want.\n  //minimumFractionDigits: 0, // (this suffices for whole numbers, but will print 2500.10 as $2,500.1)\n  //maximumFractionDigits: 0, // (causes 2500.99 to be printed as $2,501)\n});\n\nconst newPerson = (step, m, t, r) => {\n  const total = 500000 + 10000 * step;\n  let mortgageCalculator = mortgageJs.createMortgageCalculator();\n  mortgageCalculator.totalPrice = total;\n  mortgageCalculator.downPayment = total * 0.2;\n  mortgageCalculator.interestRate = 0.0128;\n  mortgageCalculator.months = 360;\n  mortgageCalculator.taxRate = 0;\n  mortgageCalculator.insuranceRate = 0.0013;\n  mortgageCalculator.mortgageInsuranceRate = 0;\n  mortgageCalculator.mortgageInsuranceEnabled = false;\n  mortgageCalculator.mortgageInsuranceThreshold = 0.1;\n  mortgageCalculator.additionalPrincipalPayment = 0;\n  let payment = mortgageCalculator.calculatePayment();\n  var mortgage = payment.paymentSchedule[0].totalPayment;\n  var tax = parseFloat(t) / 12;\n  var insurance = 20;\n  var rental = parseFloat(r);\n  var management = parseFloat(m);\n  var cost = mortgage + management + tax + insurance;\n  var cost_interest =\n    payment.paymentSchedule[0].interestPayment + management + tax + insurance;\n  var roi = ((rental - cost_interest) * 360) / mortgageCalculator.downPayment;\n\n  //compound annual growth rate: https://www.investopedia.com/articles/basics/10/guide-to-calculating-roi.asp\n  var cagr = numeral((1 + roi) ** (1 / 30) - 1).format(\"0.00%\");\n  console.log(management, cost);\n  return {\n    price: formatter.format(total),\n    down: formatter.format(mortgageCalculator.downPayment),\n    mortgage: formatter.format(mortgage),\n    management: formatter.format(management),\n    tax: formatter.format(tax),\n    insurance: formatter.format(insurance),\n    rental: formatter.format(rental),\n    cash: formatter.format(rental - cost),\n    profit: formatter.format(rental - cost_interest),\n    roi: cagr\n  };\n};\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth];\n    const m = lens[1];\n    const t = lens[2];\n    const r = lens[3];\n\n    return range(len).map((d) => {\n      return {\n        ...newPerson(d, m, t, r)\n      };\n    });\n  };\n\n  return makeDataLevel();\n}\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport makeData from \"./makeData\";\n\nconst Styles = styled.div`\n  padding: 1rem;\n\n  table {\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n`;\n\nfunction Table({ columns, data }) {\n  // Use the state and functions returned from useTable to build your UI\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow\n  } = useTable(\n    {\n      columns,\n      data\n    },\n    useRowSelect\n  );\n\n  // Render the UI for your table\n  return (\n    <>\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n            </tr>\n          ))}\n        </thead>\n        <tbody {...getTableBodyProps()}>\n          {rows.slice(0, 50).map((row, i) => {\n            prepareRow(row);\n            return (\n              <tr {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\n                  );\n                })}\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </>\n  );\n}\n\nfunction App() {\n  const rows = 40;\n  const [data, setData] = useState(makeData(rows, 123));\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: \"房价\",\n        accessor: \"price\"\n      },\n      {\n        Header: \"首付\",\n        accessor: \"down\"\n      },\n      {\n        Header: \"每月支出\",\n        columns: [\n          {\n            Header: \"贷款月供\",\n            accessor: \"mortgage\"\n          },\n          {\n            Header: \"维护费\",\n            accessor: \"management\"\n          },\n          {\n            Header: \"地税\",\n            accessor: \"tax\"\n          },\n          {\n            Header: \"房东保险\",\n            accessor: \"insurance\"\n          }\n        ]\n      },\n      {\n        Header: \"每月收入\",\n        columns: [\n          {\n            Header: \"租金\",\n            accessor: \"rental\"\n          }\n        ]\n      },\n      {\n        Header: \"财务分析\",\n        columns: [\n          {\n            Header: \"每月现金流\",\n            accessor: \"cash\"\n          },\n          {\n            Header: \"每月收益流\",\n            accessor: \"profit\"\n          },\n          {\n            Header: \"租金年化复合回报\",\n            accessor: \"roi\"\n          }\n        ]\n      }\n    ],\n    []\n  );\n\n  const [management, setManagement] = useState(0);\n  const updateManagement = (e) => {\n    setManagement(e.target.value);\n    setData(makeData(rows, e.target.value, tax, rental));\n  };\n  const [tax, setTax] = useState(0);\n  const updateTax = (e) => {\n    setTax(e.target.value);\n    setData(makeData(rows, management, e.target.value, rental));\n  };\n  const [rental, setRental] = useState(0);\n  const updateRental = (e) => {\n    setRental(e.target.value);\n    setData(makeData(rows, management, tax, e.target.value));\n  };\n\n  return (\n    <Styles>\n      <div>\n        <h1>condo投资收益计算</h1>\n        管理费/月：\n        <input type=\"number\" name=\"management\" onChange={updateManagement} />\n        {\"  \"}\n        地税/年：\n        <input type=\"number\" name=\"tax\" onChange={updateTax} />\n        {\"  \"}\n        租金/月：\n        <input type=\"number\" name=\"rental\" onChange={updateRental} />\n        {\"  \"}\n        {\"  \"}\n        <p></p>\n      </div>\n      <Table columns={columns} data={data} />\n    </Styles>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}